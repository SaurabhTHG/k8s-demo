environment: uat
nameOverride: popularity-service
fullnameOverride: popularity-service

image:
  repository: popularity-service
  tag: 0.1.0
  pullPolicy: Never

podAnnotations:
  prometheus.io/scrape: 'true'
  prometheus.io/port: '8080'
  prometheus.io/path: '/actuator/prometheus'

#TODO
#dockerConfigJson: "%%DOCKER_CONFIG_JSON%%"

service:
  port: 8080

healthcheck:
  startuppath: /actuator/health
  livepath: /actuator/health
  readypath: /actuator/health
  port: 8080
  startupdelay: 60
  periodSeconds: 5
  livedelay: 5
  readydelay: 5
  startupFailureThreshold: 20
  liveFailureThreshold: 6
  readyFailureThreshold: 6

resources:
  limits:
    cpu: 1
    memory: 512Mi
  requests:
    cpu: 0.15
    memory: 512Mi

jvmOptions: "-Xms256m -XX:MaxRAMPercentage=75"

securityContext:
  runAsUser: 100
  runAsGroup: 101


autoscaling:
  enabled: false

clusters:
  cluster1:
    autoscaling:
      enabled: true
      minReplicas: 1
      maxReplicas: 2
      targetCPUUtilizationPercentage: 70
      targetMemoryUtilizationPercentage: 95

warmup:
  enabled: true

config:
  application-uat.yaml: |-
    spring:
          activemq:
            broker-url:ssl://gb5-ua-activemqbroker-001.io.thehut.local:61617?daemon=true
            username: popularityservice
            password: AP3t29rZm7rmPhKbeaew
        datasource:
          elysium:
            driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
            jdbc-url: jdbc:sqlserver://GFC-UA-ELYDB001.THEHUTGROUP.LOCAL:1433;databaseName=Elysium;appName=PopularityService;multiSubnetFailover=true
            username: PopularityService
            password: PopularityServiceUAT
          local:
            driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
            jdbc-url: jdbc:sqlserver://GFC-UA-TABDB001.thehut.local:1433;databaseName=PopularityService
            username: popularityService
            password: popularityServiceUAT
    logging:
      config: "/config/logback.xml"
  logback.xml: |-
    <configuration scan="false">
        <appender name="CYCLIC" class="ch.qos.logback.core.read.CyclicBufferAppender">
            <MaxSize>60</MaxSize>
        </appender>
    
        <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
            <encoder>
                <pattern>%-26(%d{"yyyy-MM-dd HH:mm:ss,SSS"} [%thread]) %-5level %logger{32} - %mdc - %msg%n</pattern>
            </encoder>
        </appender>

        <logger name="GeneralLogger" level="WARN" additivity="false">
            <appender-ref ref="CYCLIC"/>
            <appender-ref ref="CONSOLE"/>
        </logger>

        <logger name="TrackerLogger" level="WARN" additivity="false">
            <appender-ref ref="CYCLIC"/>
            <appender-ref ref="CONSOLE"/>
        </logger>
    
        <logger name="AccessLogger" level="INFO" additivity="false">
            <appender-ref ref="CYCLIC"/>
            <appender-ref ref="CONSOLE"/>
        </logger>

        <logger name="com.thehutgroup.popularityservice.web.RequestLogFilter" level="WARN" additivity="false">
            <appender-ref ref="CYCLIC"/>
            <appender-ref ref="CONSOLE"/>
        </logger>

        <root level="WARN">
            <appender-ref ref="CYCLIC"/>
            <appender-ref ref="CONSOLE"/>
        </root>
    </configuration>